name: Deploy to GKE

on:
  workflow_run:
    workflows: ["Run tests for API and Frontend"]
    types:
      - completed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-east5-docker.pkg.dev --quiet

      - name: Build and push frontend Docker image
        run: |
          docker build -t us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_frontdock:latest ./frontdock
          docker push us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_frontdock:latest

      - name: Build and push API Docker image
        run: |
          docker build -t us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_apidock:latest ./apidock
          docker push us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_apidock:latest

      - name: Build and push Database Docker image
        run: |
          docker build -t us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_dbdock:latest ./dbdock
          docker push us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_dbdock:latest

      - name: Install GKE auth plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --region ${{ secrets.GKE_ZONE }}

      - name: Deploy frontend to GKE
        run: |
          kubectl set image deployment/${{ secrets.GKE_DEPLOYMENT_FRONTEND }} frontdock=us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_frontdock:latest --namespace=default

      - name: Deploy API to GKE
        run: |
          kubectl set image deployment/${{ secrets.GKE_DEPLOYMENT_API }} apidock=us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_apidock:latest --namespace=default

      - name: Deploy Database to GKE
        run: |
          kubectl set image deployment/${{ secrets.GKE_DEPLOYMENT_DB }} dbdock=us-east5-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/protectodockergcloud/container_dbdock:latest --namespace=default

      - name: Restart pods to apply changes
        run: |
          kubectl rollout restart deployment/${{ secrets.GKE_DEPLOYMENT_FRONTEND }} --namespace=default
          kubectl rollout restart deployment/${{ secrets.GKE_DEPLOYMENT_API }} --namespace=default
          kubectl rollout restart deployment/${{ secrets.GKE_DEPLOYMENT_DB }} --namespace=default

      - name: Check logs for potential errors
        run: |
          kubectl get pods --namespace=default
          kubectl get events --sort-by=.metadata.creationTimestamp --namespace=default
